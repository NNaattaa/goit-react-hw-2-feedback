{"version":3,"sources":["components/Layout/Layout.js","components/Section/Section.js","components/Statistic/Statistic.js","components/Statistics/Statistics.js","components/FeedbackOptions/FeedbackOptions.js","components/Notification/Notification.js","components/App.js","index.js"],"names":["Container","styled","div","Title","h1","Layout","children","FeedbackSection","section","h2","Section","title","Stats","span","Statistic","label","value","Statistics","good","neutral","bad","total","positivePercentage","Button","button","FeedbackOptions","options","onLeaveFeedback","map","type","key","onClick","Text","p","Notification","message","INITIAL_STATE","FEEDBACK_TYPES","App","state","countTotalFeedback","Object","values","reduce","acc","countPositiveFeedbackPercentage","percentage","isNaN","toFixed","Number","increment","setState","prevState","this","positivePercent","Component","ReactDOM","render","document","querySelector"],"mappings":"6kBAGA,IAAMA,EAAYC,IAAOC,IAAV,KAKTC,EAAQF,IAAOG,GAAV,KAeIC,EAPA,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OACb,kBAACN,EAAD,KACE,kBAACG,EAAD,iBACCG,I,kNCfL,IAAMC,EAAkBN,IAAOO,QAAV,KAIfL,EAAQF,IAAOQ,GAAV,KAmBIC,MAdf,YAAuC,IAApBC,EAAmB,EAAnBA,MAAOL,EAAY,EAAZA,SACxB,OACE,kBAACC,EAAD,KACE,kBAAC,EAAD,KAAQI,GACPL,I,iNCbP,IAAMM,EAAQX,IAAOY,KAAV,KAuBIC,MAbf,YAAsC,IAAjBC,EAAgB,EAAhBA,MAAOC,EAAS,EAATA,MAC1B,OACE,kBAACJ,EAAD,KACGG,EADH,KACYC,ICODC,MApBf,YAAwE,IAAlDC,EAAiD,EAAjDA,KAAMC,EAA2C,EAA3CA,QAASC,EAAkC,EAAlCA,IAAKC,EAA6B,EAA7BA,MAAOC,EAAsB,EAAtBA,mBAC/C,OACE,oCACE,kBAAC,EAAD,CAAWP,MAAM,OAAOC,MAAOE,IAC/B,kBAAC,EAAD,CAAWH,MAAM,UAAUC,MAAOG,IAClC,kBAAC,EAAD,CAAWJ,MAAM,MAAMC,MAAOI,IAC9B,kBAAC,EAAD,CAAWL,MAAM,QAAQC,MAAOK,IAChC,kBAAC,EAAD,CAAWN,MAAM,oBAAoBC,MAAK,UAAKM,EAAL,S,6bCPhD,IAAMC,EAAStB,IAAOuB,OAAV,KAoCGC,MAhBf,YAAwD,IAA7BC,EAA4B,EAA5BA,QAASC,EAAmB,EAAnBA,gBAClC,OACE,oCACGD,EAAQE,KAAI,SAACC,GAAD,OACX,kBAACN,EAAD,CAAQO,IAAKD,EAAMA,KAAK,SAASE,QAAS,kBAAMJ,EAAgBE,KAC7DA,Q,mHCzBX,IAAMG,EAAO/B,IAAOgC,EAAV,KAaKC,MARf,YAAoC,IAAZC,EAAW,EAAXA,QACtB,OAAO,kBAACH,EAAD,KAAOG,ICFVC,G,MAAgB,CACpBlB,KAAM,EACNC,QAAS,EACTC,IAAK,IAGDiB,EAAiB,CAAC,OAAQ,UAAW,OA0D5BC,E,2MAvDbC,M,eACKH,G,EAGLI,mBAAqB,WACnB,OAAOC,OAAOC,OAAO,EAAKH,OAAOI,QAAO,SAACC,EAAK5B,GAAN,OAAgB4B,EAAM5B,IAAO,I,EAGvE6B,gCAAkC,SAACxB,EAAOH,GACxC,IAAI4B,EAAqB,IAAP5B,EAAcG,EAC5B0B,MAAMD,KACRA,EAAa,GAEf,IAAM9B,EAAQ8B,EAAWE,UACzB,OAAOC,OAAOjC,I,EAGhBkC,UAAY,SAACrB,GACX,EAAKsB,UAAS,SAACC,GACb,OAAO,eAAGvB,EAAOuB,EAAUvB,GAAQ,O,wEAI7B,IAAD,EACwBwB,KAAKd,MAA5BrB,EADD,EACCA,KAAMC,EADP,EACOA,QAASC,EADhB,EACgBA,IAEjBC,EAAQgC,KAAKb,qBACbc,EAAkBD,KAAKR,gCAAgCxB,EAAOH,GAEpE,OACE,kBAAC,EAAD,KACE,kBAAC,EAAD,CAASP,MAAM,yBACb,kBAAC,EAAD,CACEe,QAASW,EACTV,gBAAiB0B,KAAKH,aAG1B,kBAAC,EAAD,CAASvC,MAAM,cACF,IAAVU,EACC,kBAAC,EAAD,CAAcc,QAAQ,sBAEtB,kBAAC,EAAD,CACEjB,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOA,EACPC,mBAAoBgC,U,GA/ChBC,aCZlBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,cAAc,Y","file":"static/js/main.4375a639.chunk.js","sourcesContent":["import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  margin: 8rem;\r\n  max-width: 80rem;\r\n`;\r\n\r\nconst Title = styled.h1`\r\n  display: inline-block;\r\n  width: 0.01rem;\r\n  height: 00.1rem;\r\n  opacity: 0;\r\n  font-size: 0.01rem;\r\n`;\r\n\r\nconst Layout = ({ children }) => (\r\n  <Container>\r\n    <Title>Feedback</Title>\r\n    {children}\r\n  </Container>\r\n);\r\n\r\nexport default Layout;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst FeedbackSection = styled.section`\r\n  margin-bottom: 5rem;\r\n`;\r\n\r\nconst Title = styled.h2`\r\n  font-size: 4rem;\r\n  margin-bottom: 3rem;\r\n`;\r\n\r\nfunction Section({ title, children }) {\r\n  return (\r\n    <FeedbackSection>\r\n      <Title>{title}</Title>\r\n      {children}\r\n    </FeedbackSection>\r\n  );\r\n}\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  children: PropTypes.object,\r\n};\r\n\r\nexport default Section;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Stats = styled.span`\r\n  display: block;\r\n  margin-left: 3rem;\r\n  font-size: 2.4rem;\r\n  margin-bottom: 1rem;\r\n  &:last-of-type {\r\n    margin-bottom: none;\r\n  }\r\n`;\r\n\r\nfunction Statistic({ label, value }) {\r\n  return (\r\n    <Stats>\r\n      {label}: {value}\r\n    </Stats>\r\n  );\r\n}\r\n\r\nStatistic.propTypes = {\r\n  label: PropTypes.string.isRequired,\r\n  value: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\r\n};\r\n\r\nexport default Statistic;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Statistic from \"../Statistic\";\r\n\r\nfunction Statistics({ good, neutral, bad, total, positivePercentage }) {\r\n  return (\r\n    <>\r\n      <Statistic label=\"Good\" value={good} />\r\n      <Statistic label=\"Neutral\" value={neutral} />\r\n      <Statistic label=\"Bad\" value={bad} />\r\n      <Statistic label=\"Total\" value={total} />\r\n      <Statistic label=\"Positive feedback\" value={`${positivePercentage}%`} />\r\n    </>\r\n  );\r\n}\r\n\r\nStatistics.propTypes = {\r\n  good: PropTypes.number.isRequired,\r\n  neutral: PropTypes.number.isRequired,\r\n  bad: PropTypes.number.isRequired,\r\n  total: PropTypes.number.isRequired,\r\n  positivePercentage: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default Statistics;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Button = styled.button`\r\n  text-transform: capitalize;\r\n  font-size: 2rem;\r\n  padding: 1rem;\r\n  border-radius: 2rem;\r\n  margin-left: 2rem;\r\n  background-color: snow;\r\n  &:hover,\r\n  &:focus {\r\n    background-color: #40c965;\r\n    color: snow;\r\n    border-color: #7a7a7a;\r\n    box-shadow: 0px 0px 10px 0px rgba(0, 0, 0, 0.75);\r\n    outline: none;\r\n  }\r\n  &:active {\r\n    background-color: green;\r\n  }\r\n`;\r\n\r\nfunction FeedbackOptions({ options, onLeaveFeedback }) {\r\n  return (\r\n    <>\r\n      {options.map((type) => (\r\n        <Button key={type} type=\"button\" onClick={() => onLeaveFeedback(type)}>\r\n          {type}\r\n        </Button>\r\n      ))}\r\n    </>\r\n  );\r\n}\r\n\r\nFeedbackOptions.propTypes = {\r\n  onLeaveFeedback: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default FeedbackOptions;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Text = styled.p`\r\n  margin-left: 3rem;\r\n  font-size: 2.4rem;\r\n`;\r\n\r\nfunction Notification({ message }) {\r\n  return <Text>{message}</Text>;\r\n}\r\n\r\nNotification.propTypes = {\r\n  message: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Notification;\r\n","import React, { Component } from \"react\";\r\nimport Layout from \"./Layout\";\r\nimport Section from \"./Section\";\r\nimport Statistics from \"./Statistics\";\r\nimport FeedbackOptions from \"./FeedbackOptions\";\r\nimport Notification from \"./Notification\";\r\nimport \"../base.css\";\r\n\r\nconst INITIAL_STATE = {\r\n  good: 0,\r\n  neutral: 0,\r\n  bad: 0,\r\n};\r\n\r\nconst FEEDBACK_TYPES = [\"good\", \"neutral\", \"bad\"];\r\n\r\nclass App extends Component {\r\n  state = {\r\n    ...INITIAL_STATE,\r\n  };\r\n\r\n  countTotalFeedback = () => {\r\n    return Object.values(this.state).reduce((acc, value) => acc + value, 0);\r\n  };\r\n\r\n  countPositiveFeedbackPercentage = (total, good) => {\r\n    let percentage = (good * 100) / total;\r\n    if (isNaN(percentage)) {\r\n      percentage = 0;\r\n    }\r\n    const value = percentage.toFixed();\r\n    return Number(value);\r\n  };\r\n\r\n  increment = (type) => {\r\n    this.setState((prevState) => {\r\n      return { [type]: prevState[type] + 1 };\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { good, neutral, bad } = this.state;\r\n\r\n    const total = this.countTotalFeedback();\r\n    const positivePercent = this.countPositiveFeedbackPercentage(total, good);\r\n\r\n    return (\r\n      <Layout>\r\n        <Section title=\"Please leave feedback\">\r\n          <FeedbackOptions\r\n            options={FEEDBACK_TYPES}\r\n            onLeaveFeedback={this.increment}\r\n          />\r\n        </Section>\r\n        <Section title=\"Statistics\">\r\n          {total === 0 ? (\r\n            <Notification message=\"No feedback given\" />\r\n          ) : (\r\n            <Statistics\r\n              good={good}\r\n              neutral={neutral}\r\n              bad={bad}\r\n              total={total}\r\n              positivePercentage={positivePercent}\r\n            />\r\n          )}\r\n        </Section>\r\n      </Layout>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./components/App\";\r\n\r\nReactDOM.render(<App />, document.querySelector(\"#root\"));\r\n"],"sourceRoot":""}